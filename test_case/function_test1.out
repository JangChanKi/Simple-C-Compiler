<VTYPE, int>
<ID, a>
<SEMI, ;>
<VTYPE, int>
<ID, bd>
<SEMI, ;>
<VTYPE, int>
<ID, main>
<LPAREN, (>
<VTYPE, char>
<ID, args>
<COMMA, ,>
<VTYPE, int>
<ID, bd>
<RPAREN, )>
<LBRACE, {>
<VTYPE, int>
<ID, result>
<SEMI, ;>
<ID, bd>
<ASSIGN, =>
<INTEGER, -23>
<SEMI, ;>
<ID, a>
<ASSIGN, =>
<ID, args>
<OP, +>
<ID, bd>
<OP, />
<INTEGER, 2>
<SEMI, ;>
<IF, if>
<LPAREN, (>
<LPAREN, (>
<ID, bd>
<OP, />
<INTEGER, 2>
<RPAREN, )>
<COMPARISON, ==>
<INTEGER, 0>
<RPAREN, )>
<LBRACE, {>
<ID, result>
<ASSIGN, =>
<INTEGER, -1>
<SEMI, ;>
<RBRACE, }>
<ELSE, else>
<LBRACE, {>
<ID, result>
<ASSIGN, =>
<ID, bd>
<OP, +>
<ID, a>
<SEMI, ;>
<RBRACE, }>
<WHILE, while>
<LPAREN, (>
<ID, a>
<COMPARISON, !=>
<INTEGER, 0>
<RPAREN, )>
<LBRACE, {>
<ID, a>
<ASSIGN, =>
<ID, a>
<OP, ->
<INTEGER, 1>
<SEMI, ;>
<RBRACE, }>
<RETURN, return>
<ID, result>
<SEMI, ;>
<RBRACE, }>
<VTYPE, char>
<ID, test1>
<LPAREN, (>
<RPAREN, )>
<LBRACE, {>
<IF, if>
<LPAREN, (>
<ID, a>
<COMPARISON, >=>
<INTEGER, 0>
<RPAREN, )>
<LBRACE, {>
<ID, a>
<ASSIGN, =>
<ID, b>
<OP, +>
<ID, c>
<SEMI, ;>
<RBRACE, }>
<ELSE, else>
<LBRACE, {>
<ID, a>
<ASSIGN, =>
<ID, a>
<OP, +>
<ID, c>
<SEMI, ;>
<RBRACE, }>
<ID, hoon>
<ASSIGN, =>
<ID, asdf>
<SEMI, ;>
<RETURN, return>
<ID, hoon>
<SEMI, ;>
<RBRACE, }>
<VTYPE, int>
<ID, test2>
<LPAREN, (>
<VTYPE, int>
<ID, aa>
<RPAREN, )>
<LBRACE, {>
<VTYPE, int>
<ID, a>
<SEMI, ;>
<VTYPE, int>
<ID, b>
<SEMI, ;>
<VTYPE, int>
<ID, c>
<SEMI, ;>
<VTYPE, int>
<ID, gimanki>
<SEMI, ;>
<ID, a>
<ASSIGN, =>
<ID, aa>
<SEMI, ;>
<ID, b>
<ASSIGN, =>
<ID, aa>
<OP, *>
<ID, aa>
<SEMI, ;>
<ID, c>
<ASSIGN, =>
<LPAREN, (>
<ID, aa>
<OP, *>
<ID, aa>
<RPAREN, )>
<OP, />
<ID, aa>
<SEMI, ;>
<ID, gimanki>
<ASSIGN, =>
<ID, a>
<OP, +>
<ID, b>
<OP, +>
<ID, c>
<SEMI, ;>
<RETURN, return>
<ID, gimanki>
<SEMI, ;>
<RBRACE, }>
